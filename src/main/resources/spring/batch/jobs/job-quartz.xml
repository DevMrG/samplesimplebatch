<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:batch="http://www.springframework.org/schema/batch"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/batch
	http://www.springframework.org/schema/batch/spring-batch-2.2.xsd
	http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
	">

	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource">
        <property name="driverClassName" value="com.mysql.jdbc.Driver" />
        <property name="url" value="jdbc:mysql://localhost:3306/PMS" />
        <property name="username" value="root" />
        <property name="password" value="root" />
    </bean>


	<!-- spring batch context -->
	<bean id="jobRepository"
		class="org.springframework.batch.core.repository.support.MapJobRepositoryFactoryBean">
		<property name="transactionManager" ref="transactionManager" />
	</bean>

	<bean id="transactionManager"
		class="org.springframework.batch.support.transaction.ResourcelessTransactionManager" />

	<bean id="jobLauncher"
		class="org.springframework.batch.core.launch.support.SimpleJobLauncher">
		<property name="jobRepository" ref="jobRepository" />
	</bean>

	<!-- Must set this -->
	<bean
		class="org.springframework.batch.core.configuration.support.JobRegistryBeanPostProcessor">
		<property name="jobRegistry" ref="jobRegistry" />
	</bean>

	<bean id="jobRegistry"
		class="org.springframework.batch.core.configuration.support.MapJobRegistry" />
	<!-- spring batch context -->

	<bean id="report" class="com.mkyong.model.Report" scope="prototype" />

	

	<batch:job id="reportJob">
		<batch:step id="step1">
			<batch:tasklet>
				<batch:chunk reader="itemReader" processor="processor" writer="customWriter"
					commit-interval="10">
				</batch:chunk>
			</batch:tasklet>
		</batch:step>
	</batch:job>

	<bean id="itemReader" class="org.springframework.batch.item.database.JdbcPagingItemReader" scope="step">
		
		<property name="dataSource"  ref="dataSource"></property>
		 <property name="queryProvider">
		  <bean
			class="org.springframework.batch.item.database.support.SqlPagingQueryProviderFactoryBean">
			<property name="dataSource" ref="dataSource" />
			<property name="selectClause" value="SELECT *" />
        	<property name="fromClause" value="from Employee" /> 
        	<property name="sortKey" value="employeeID"></property>
  		  </bean>
		</property>
		
		<property name="rowMapper">
				<bean class="com.mkyong.mapper.EmployeeRowMapper"></bean>
		</property>
		
	</bean>
	
	
	<bean id="processor" class="com.mkyong.Processor.CustomProcessor"></bean>
	<bean id="customWriter" class="org.springframework.batch.item.database.JdbcBatchItemWriter"> 
	  <property name="dataSource" ref="dataSource" />
	  <property name="sql">
            <value>
                <![CDATA[        
                   INSERT INTO TEST(Name) values(:name)
                ]]>
            </value>
        </property>
        <property name="itemSqlParameterSourceProvider">
        <bean class="org.springframework.batch.item.database.BeanPropertyItemSqlParameterSourceProvider"/>
    </property>
        
	
	
	</bean>
	
	
	<bean class="org.springframework.scheduling.quartz.SchedulerFactoryBean">
		<property name="triggers">
			<bean id="cronTrigger" class="org.springframework.scheduling.quartz.CronTriggerBean">
				<property name="jobDetail" ref="jobDetail" />
				<property name="cronExpression" value="5 * * * * ?" />
			</bean>
		</property>
	</bean>

	<bean id="jobDetail" class="org.springframework.scheduling.quartz.JobDetailBean">
		<property name="jobClass" value="com.mkyong.quartz.JobLauncherDetails" />
		<property name="group" value="quartz-batch" />
		<property name="jobDataAsMap">
			<map>
				<entry key="jobName" value="reportJob" />
				<entry key="jobLocator" value-ref="jobRegistry" />
				<entry key="jobLauncher" value-ref="jobLauncher" />
				<entry key="param1" value="mkyong1" />
				<entry key="param2" value="mkyong2" />
			</map>
		</property>
	</bean>

</beans>
